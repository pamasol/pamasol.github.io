<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Automatisierungsprojekt on Pamasol Electrics Portal</title><link>https://pamasol.github.io/de/pick-n-place-project/index.html</link><description>Recent content in Automatisierungsprojekt on Pamasol Electrics Portal</description><generator>Hugo -- gohugo.io</generator><language>de</language><atom:link href="https://pamasol.github.io/de/pick-n-place-project/index.xml" rel="self" type="application/rss+xml"/><item><title>Aufgabenstellung</title><link>https://pamasol.github.io/de/pick-n-place-project/definition-of-task/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pamasol.github.io/de/pick-n-place-project/definition-of-task/index.html</guid><description>Beschreibung des Programmablaufes Wie in der Animation oben gezeigt, soll der Pick&amp;amp;Placer folgendermassen programmiert werden, inklusive Visualisierung am Bedienpanel.
Zu Beginn ist der Pick&amp;amp;Placer eingefahren und das Förderband steht. Der Operator platziert einen Behälter auf dem Förderband bei der Einlauflichtschranke 100BG1 und drückt den Taster Start. Der Behälter wird bis zum Vereinzeler gefördert und dort gestoppt. Der Pick&amp;amp;Placer fährt nach unten, saugt beim Deckelmagazin einen Deckel an, fährt wieder nach oben, nach vorne und nach unten über den Behälter.</description></item><item><title>Kurzübersicht TIA V16</title><link>https://pamasol.github.io/de/pick-n-place-project/brief-overview/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pamasol.github.io/de/pick-n-place-project/brief-overview/index.html</guid><description>Wie die Entwicklungsumgebung TIA Portal aufgebaut ist Um eine SPS programmieren zu können, benötigt man einen Laptop, auf welchem die SPS-Programmiersoftware – im Fachjargon Entwicklungsumgebung genannt – installiert ist.
Der Pick&amp;amp;Place Roboter ist mit einer Siemens SPS ausgestattet, welche mittels der Entwicklungsumgebung TIA Portal programmiert wird. TIA ist die Kurzversion für «Totally Integrated Automation». Mehr Infos zu dieser Software gibt es auf der Siemens Webseite.
Im Video wird die Benutzeroberfläche erklärt mit den beiden Ansichten Portalansicht und Projektansicht.</description></item><item><title>Neues Projekt erstellen</title><link>https://pamasol.github.io/de/pick-n-place-project/create-project/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pamasol.github.io/de/pick-n-place-project/create-project/index.html</guid><description>Die SPS Hardwarekonfiguration als Basis In einem ersten Schritt wird in der Projektansicht ein neues SPS Projekt erstellt. Anschliessend muss man die im Schaltschrank verbaute SPS in der Software abbilden. Das wird mittels Hardwarekonfiguration gemacht.
Der Pick&amp;amp;Place Roboter ist mit einer SIMATIC ET200 CPU ausgestattet. Zusätzlich werden die Ein- und Ausgangsmodule hinzugefügt und konfiguriert.
Artikelnummern der SPS für Hardwarekonfig Steuerung CPU 1512SP F-1 PN: 6ES7512-1SK01-0AB0 Safety Eingangskarte ET200SP F-DI 8x 24V DC HF: 6ES7136-6BA00-0CA0 Safety Ausgangskarte ET200SP F-DQ 8x 24V DC/0.</description></item><item><title>Modulkarten parametrieren</title><link>https://pamasol.github.io/de/pick-n-place-project/set-plc-module-parameters/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pamasol.github.io/de/pick-n-place-project/set-plc-module-parameters/index.html</guid><description>Central processing unit (CPU) und IOs konfigurieren In der Gerätekonfiguration werden die Module so benannt, dass sie dieselben Namen wie im Elektroschema haben. Anschliessend wird der Adressbereich vergeben über das Eigenschaftsfenster. Alternativ kann man die Ansicht Gerätesicht &amp;gt; Geräteübersicht anwählen. Dort sind alle Karten und die Adressbereiche in Tabellenform gelistet.
Die BaseUnits der Eingangs- und Ausgangsmodule gibt es in Hell- und Dunkelgrau. Hellgraue Module werden mit 24VDC gespiesen. Dunkelgraue Module werden nicht gespiesen, sie greifen die Spannung von Links ab.</description></item><item><title>HMI parametrieren</title><link>https://pamasol.github.io/de/pick-n-place-project/set-hmi-parameters/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pamasol.github.io/de/pick-n-place-project/set-hmi-parameters/index.html</guid><description>4-Zoll Touch-Panel Siemens KTP400 Comfort HMI steht für Human-Machine Interface oder in Deutsch für Mensch-Maschine-Schnittstelle. Es ist das Touch-Panel, mit dessen Hilfe der Operator die Maschine bedient.
Unter Geräte &amp;gt; Geräte und Netze wird das HMI hinzugefügt. Es handelt sich um ein KTP400 Comfort Panel von Siemens mit der Typennummer 6AV2124-2DC01-0AX0.
Profinet steht für Process Field Network. Es ist ein Kommunikationsprotokoll, welches in der Industrie oft zum Einsatz kommt und TCP/IP Standards verwendet.</description></item><item><title>SPS simulieren</title><link>https://pamasol.github.io/de/pick-n-place-project/simulation-with-plcsim/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pamasol.github.io/de/pick-n-place-project/simulation-with-plcsim/index.html</guid><description>CPU und HMI emulieren für Tests ohne Hardware Mit Hilfe von SIMATIC S7-PLCSIM kann die Pick&amp;amp;Place Steuerung simuliert und somit getestet werden, ohne dass irgendwelche Hardwarekomponenten benötigt werden.
Im Video wird die PLC und das Touch-Panel emuliert. Emulieren bedeutet die Funkionen eines Computers auf einem anderen Gerät nachbilden.
Um eine SPS oder ein HMI zu simulieren, muss man das Bauteil im Projektnavigator unter Geräte anwählen und anschliessend in der Symbolleiste auf das Icon Simulation starten klicken.</description></item><item><title>Programm laden</title><link>https://pamasol.github.io/de/pick-n-place-project/load-program/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pamasol.github.io/de/pick-n-place-project/load-program/index.html</guid><description>Download des Programms vom PC auf SPS und HMI Um das Programm aus dem TIA Portal auf die SPS zu laden. In einem ersten Schritt klickt man unter Geräte auf Geräte &amp;amp; Netze, wo man sich die IP-Adressen einblenden lassen kann.
CPU 1512SP F-1 PN: 192.168.10.10 Touch-Panel KTP400 Comfort: 192.168.10.5 In einem zweiten Schritt muss man dem Laptop, welcher sich im gleichen Netzwerk befindet, eine statische IP-Adresse vergeben. In Windows bei den Adapteroptionen wählt man für den Ethernet-Port die Adresse 192.</description></item><item><title>Programm erstellen</title><link>https://pamasol.github.io/de/pick-n-place-project/create-program/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pamasol.github.io/de/pick-n-place-project/create-program/index.html</guid><description>Erstes Programm für Pick&amp;amp;Place Roboter Im Main [OB1] wird ein Programm erstellt, um die horizontale Achse des Roboters aus- und einzufahren. Dazu wird die grafische Programmiersprache KOP (Kontaktplan) verwendet mit folgenden Ein- und Ausgängen.
Beschreibung Symbolische Adresse Absolute Adresse Pick&amp;amp;Placer Bedienstelle Start (160SF3) PIPL_Pa_SF_Start E1.1 Pick&amp;amp;Placer Schlitten ausfahren (125MB1) PIPL_MB_CarrierExtend A0.4 Pick&amp;amp;Placer Schlitten einfahren (125MB2) PIPL_MB_CarrierRetract A0.5 Pick&amp;amp;Placer Bedienstelle Stop (160SF4) PIPL_Pa_SF_Stop E1.2 PLC Clock 0.4s (2.5Hz) ME_PLC_Clock_0.4s M0.2 Pick&amp;amp;Placer Bedienstelle LED Start (160SF3) PIPL_Pa_PF_Start A1.</description></item><item><title>Visualisierung erstellen</title><link>https://pamasol.github.io/de/pick-n-place-project/hmi-designing/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pamasol.github.io/de/pick-n-place-project/hmi-designing/index.html</guid><description>Bindeglied zwischen Mensch und Maschine entwerfen Als HMI (Human Machine Interface) 155PH1 kommt ein KTP400 Comfort Panel von Siemens zum Einsatz. 400 steht für die Bidschirmgrösse, was in diesem Fall 4.3&amp;quot; ist. Die Auflösung beträgt 480 auf 272 Pixels.
Zum Vergleich: ein Samsung Galaxy S22 Smartphone mit einem 6.1&amp;quot; Display hat eine Auflösung von 1080 x 2340 Pixels. Bezüglich design ist man somit etwas eingeschränkt, dennoch kann ein schönes und übersichtliches Design erstellt werden, welches dem Operator die Bedienung des Pick&amp;amp;Place Rotobers erleichtert.</description></item><item><title>HMI Alarmmeldungen</title><link>https://pamasol.github.io/de/pick-n-place-project/hmi-alarms/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pamasol.github.io/de/pick-n-place-project/hmi-alarms/index.html</guid><description>HMI-Bitmeldungen auf Touch-Panel anzeigen Eine Störung, welche die rote Lampe aufleuchten lässt, ist bereiets vorhanden im Main [OB1], jedoch gibt es zu dieser Leuchte keine Fehlermeldung. Die Leuchte waltet als Sammelfehler. Sie wird in Netzwerk 7 generiert, wo es folgende Variabeln gibt.
Beschreibung Symbolische Adresse Absolute Addresse Pick&amp;amp;Placer Schlitten ausgefahren (120BG2) PIPL_BG_CarrierExtended E0.5 Pick&amp;amp;Placer Schlitten eingeffahren (120BG1) PIPL_MB_CarrierRetracted E0.4 Pick&amp;amp;Placer Schlitten ausfahren (125MB1) PIPL_MB_CarrierExtend A0.4 Pick&amp;amp;Placer Schlitten einfahren (125MB2) PIPL_MB_CarrierRetract A0.</description></item><item><title>Programm strukturieren</title><link>https://pamasol.github.io/de/pick-n-place-project/structure-program/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pamasol.github.io/de/pick-n-place-project/structure-program/index.html</guid><description>OB1 in verschiedene Teilprogramme zerlegen Der OB1, in welchem sich das Programm befindet, wird in folgende drei FB's aufgeteilt:
FB1 01-Allgemein FB2 02-Allgemein_Pick&amp;amp;Placer FB3 03-Ablauf_Pick&amp;amp;Placer So kann man das Programm in kleine Teilaufgaben zerstückeln, was das Programm übersichtlicher macht. Zudem kann man wiederkehrende Funktionen wie das Bewegen einer Achse einmal programmieren und dann immer wieder verwenden – was dem DRY-Prinzip entspricht.
Bausteintyp Kurzform Merkmale Organisationsbaustein OB Schnittstelle zwischen Betriebssystem und ProgrammGestaffelte Prioritäten (1 bis 28)zum Beispiel OB1, OB120 Funktionsbaustein FB Parametrierbar (mit Gedächtnis)IN, OUT, INOUT, STAT, TEMPVerwendung von Instanz-Datenbaustein.</description></item></channel></rss>